name: Reusable workflow example

on:
  workflow_call:
    inputs:
      repository:
        description: 'Repository to use in the workflow'
        required: true
        type: string
      ref:
        description: 'Reference to use in the workflow'
        required: true
        type: string
      token:
        description: 'GitHub token to use in the workflow'
        required: true
        type: string

jobs:
  sync:
    name: Sync repository
    runs-on: ubuntu-latest
    steps:
    - name: Split owner/repo
      id: repo-name
      run: |
        OWNER=$(echo "${{ inputs.repository }}" | cut -d'/' -f1)
        REPO=$(echo "${{ inputs.repository }}" | cut -d'/' -f2)
        echo "OWNER=$OWNER" >> "$GITHUB_OUTPUT"
        echo "REPO=$REPO" >> "$GITHUB_OUTPUT"
        echo "Repository owner: $OWNER"
        echo "Repository name: $REPO"
    - name: Validate owner
      run: |
        if [ "${{ steps.repo-name.outputs.OWNER }}" != "baely" ]
        then
          echo "Invalid repository owner: ${{ steps.repo-name.outputs.OWNER }}"
          exit 1
        else
          echo "Valid repository owner: ${{ steps.repo-name.outputs.OWNER }}"
        fi
    - name: Checkout infra
      uses: actions/checkout@v4
      with:
        repository: baely/infra
        ref: main
    - name: check ccg?
      env:
        GH_TOKEN: ${{ inputs.token }}
      run: gh api "repos/${{ steps.repo-name.outputs.OWNER }}/${{ steps.repo-name.outputs.REPO }}/contents/main.go?ref=${{ inputs.ref }}" | jq -r '.content' | base64 -d